'''
Given an array of integers nums, return the number of good pairs.

A pair (i, j) is called good if nums[i] == nums[j] and i < j.

 

Example 1:

Input: nums = [1,2,3,1,1,3]
Output: 4
Explanation: There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.
Example 2:

Input: nums = [1,1,1,1]
Output: 6
Explanation: Each pair in the array are good.
Example 3:

Input: nums = [1,2,3]
Output: 0
 

Constraints:

1 <= nums.length <= 100
1 <= nums[i] <= 100

'''

class Solution(object):
    def numIdenticalPairs(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        pair_count = 0

        first_val_seen = {}

        for i in nums:
            if(i in first_val_seen):
                pair_count += first_val_seen[i]
                
                #increment by 1 because every elem that we see after will have 1 more sol than the prev elem
                first_val_seen[i] += 1
            else:
                first_val_seen[i] = 1
        return pair_count